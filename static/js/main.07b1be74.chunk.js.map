{"version":3,"sources":["components/AppHeader.js","jokeApi.js","components/Share.js","components/JokePlay.js","components/FileProcessing.js","index.js"],"names":["AppHeader","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","JokeUri","a","console","log","axios","get","headers","Accept","res","data","jokes","Share","className","FacebookShareButton","url","this","props","URL","quote","joke","FacebookIcon","size","round","EmailShareButton","subject","body","EmailIcon","Component","JokePlay","state","currentJoke","allJokes","jokeFile","isLoaded","isFileJokeNotAPI","newJoke","bind","loadJokeFile","loadAPIJoke","loadSingleJokeFromFile","setState","prevState","loadJokesFile","then","j","singleJoke","jokeLength","max","rnd","Math","floor","random","GenerateRND","length","getJokes","window","location","onClick","sort","b","index","reverse","map","item","key","Card","CardText","Joke","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07b1be74.chunk.js","sourcesContent":["import React from \"react\";\n\nconst AppHeader = () => {\n  return (\n    <header>\n      <nav class=\"navbar navbar-expand-lg navbar-dark default-color\">\n        <a class=\"navbar-brand\" href=\"https://visioncollege.ac.nz/\">\n          <strong>Vision College Dad Jokes</strong>\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item active\">\n              <a class=\"nav-link\" href=\"https://visioncollege.ac.nz/\">\n                College Home <span class=\"sr-only\">(current)</span>\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link\"\n                href=\"https://visioncollege.ac.nz/study/information-technology/\"\n              >\n                Information Technology Courses\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default AppHeader;\n","//https://github.com/JOThurgood/modernReactBootcamp/tree/master/19-dad-jokes-app/dad-jokes/public\nimport jokes from \"../src/Assets/DadJokesJson.json\";\nimport axios from \"axios\";\n\nconst JokeUri = \"https://icanhazdadjoke.com/\";\n\nexport async function handleResponse(response) {\n  if (response.ok) {\n    return response.text();\n  }\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\n// function handleError(error) {\n//   console.log(\"Joke API call failed. \" + error);\n//   throw error;\n// }\n//https://kapeli.com/cheat_sheets/Axios.docset/Contents/Resources/Documents/index\n\nexport async function getJokes() {\n  console.log(\"Getting a joke ..... \");\n  let res =  await axios\n    .get(JokeUri, {\n      headers: { Accept: \"text/plain\" }\n    })\n   console.log(res.data);\n return await res.data;\n}\n    \n    // .then(function(response) {\n    //   console.log(\"Logging response  \" + response.data);\n\n    //   returnJoke = response.data;\n\n    //   console.log(\"returnJoke  \" + returnJoke);\n    //  // return returnJoke;\n    // })\n    // .catch(function(error) {\n    //   console.log(\"logging error \" + error);\n    //   return error;\n    // });\n \n// import React, { Component } from \"react\";\n\n\nexport async function loadJokesFile() {\n  return await jokes; //JSON.parse(dict);\n}","import React, { Component } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  EmailIcon\r\n} from \"react-share\";\r\n\r\nclass Share extends Component {\r\n  //   var { joke, URL  } = this.props; //pass across the state\r\n  render() {\r\n    return (\r\n              <span className=\"Demo__some-network\">\r\n          <FacebookShareButton\r\n            url={this.props.URL}\r\n            quote={this.props.joke}\r\n            className=\"Demo__some-network__share-button\"\r\n          >\r\n            <FacebookIcon size={16} round />\r\n          </FacebookShareButton>\r\n\r\n          <EmailShareButton\r\n            url={this.props.URL}\r\n            subject={this.props.joke}\r\n            body=\"body\"\r\n            className=\"Demo__some-network__share-button\"\r\n          >\r\n            <EmailIcon size={16} round />\r\n          </EmailShareButton>\r\n        </span>\r\n    \r\n    );\r\n  }\r\n}\r\nexport default Share;\r\n","import React, { Component } from \"react\";\nimport { getJokes, loadJokesFile } from \"../jokeApi\";\nimport { Card, CardText } from \"reactstrap\";\nimport { GenerateRND } from \"./FileProcessing\";\nimport Share from \"./Share\";\nclass JokePlay extends Component {\n  constructor(props) {\n    super(props);\n    //make items array to hold staff initialized as empty\n    this.state = {\n      currentJoke: \"\", //current joke shown\n      allJokes: [], //a record of all the jokes loaded to user\n      jokeFile: [], //a file of all 335 jokes\n      isLoaded: false,\n      isFileJokeNotAPI: true\n    };\n    this.newJoke = this.newJoke.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadJokeFile(); //load up all jokes from file\n    this.loadAPIJoke(); //show the first joke from the api\n  }\n  //generate a new joke\n  newJoke() {\n    //select file or api\n    this.state.isFileJokeNotAPI\n      ? this.loadSingleJokeFromFile()\n      : this.loadAPIJoke();\n\n    this.setState(prevState => ({\n      isFileJokeNotAPI: !prevState.isFileJokeNotAPI\n    }));\n    console.log(\"File  \" + this.state.isFileJokeNotAPI);\n  }\n  //load up the joke file\n  loadJokeFile() {\n    loadJokesFile().then(j => {\n      this.setState(\n        () => ({\n          jokeFile: j\n        }),\n        () => {\n          //  this.WordGeneration(); //run when completed above\n        }\n      );\n    });\n  }\n\n  loadSingleJokeFromFile() {\n    const singleJoke = this.state.jokeFile[\n      GenerateRND(this.state.jokeFile.length)\n    ];\n    this.setState(() => ({\n      allJokes: [...this.state.allJokes, singleJoke], //add the joke to the history of jokes\n      currentJoke: singleJoke,\n      //  isFileJokeNotAPI: false,\n      isLoaded: true\n    }));\n  }\n  //load the API Joke\n  loadAPIJoke() {\n    //Get the API joke\n    getJokes().then(j => {\n      this.setState(() => ({\n        allJokes: [...this.state.allJokes, j], //add the joke to the history of jokes\n        currentJoke: j,\n        //  isFileJokeNotAPI: true,\n        isLoaded: true\n      }));\n    });\n    // console.log(this.state.allJokes);\n  }\n\n  render() {\n    console.log(window.location.href);\n    const { isLoaded } = this.state; //pass across the state\n    //  const jokeCount = this.state.jokeFile.length;\n    //  var fileOrAPI = this.state.isFileJokeNotAPI;\n    const URL = window.location.href;\n    if (!isLoaded) {\n      return (\n        <div className=\"container-fluid\">\n          <div className=\"row joketext\">\n            <div className=\"col-md-auto mr-auto\">\n              Just wait, we are loading a joke ...\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-auto \">\n              <button\n                onClick={this.newJoke}\n                className=\"buttonSubmit btn btn-primary\"\n              >\n                New Dad Joke\n              </button>\n            </div>\n            <div className=\"col-md-auto stopoverflow\">\n              <div className=\"row joketext\"> {this.state.currentJoke}</div>\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.state.allJokes\n              .sort((a, b) => a.index - b.index)\n              .reverse()\n              .map((item, index) => {\n                return (\n                  <div className=\"col col-md-3 col-sm-6  mx-auto \" key={index}>\n                    <Card className=\"cardBody\">\n                      <CardText className=\"conditions \">\n                        <Share Joke={item} URL={URL}></Share>\n                        {item}\n                      </CardText>\n                    </Card>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default JokePlay;\n","\r\n\r\nexport function GenerateRND(jokeLength) {\r\n  const min = 0 +1; //5 is to stop out of bound errors\r\n    const max = jokeLength - 1;   //  26731 - 5; //26731\r\n  const rnd = Math.floor(Math.random() * (max - min + 1) + min);\r\n  console.log(\"rnd \" + rnd);\r\n  return rnd;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //from reactstrap\nimport AppHeader from \"./components/AppHeader\";\nimport JokePlay from \"./components/JokePlay\";\nimport \"./App.css\";\n//import App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <AppHeader />\n    <JokePlay />\n    {/* <App /> */}\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}