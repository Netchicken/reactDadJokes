{"version":3,"sources":["jokeApi.js","components/JokePlay.js","App.js","index.js"],"names":["JokeUri","a","console","log","axios","get","headers","Accept","res","data","JokePlay","props","state","currentJoke","allJokes","isLoaded","newJoke","bind","this","loadJoke","setState","getJokes","then","j","className","onClick","sort","b","index","reverse","map","item","key","Card","CardText","Component","App","exact","path","component","jokePlay","ReactDOM","render","document","getElementById"],"mappings":"4TAIMA,EAAU,8B,4CAsBT,4BAAAC,EAAA,6DACLC,QAAQC,IAAI,yBADP,SAEYC,IACdC,IAAIL,EAAS,CACZM,QAAS,CAAEC,OAAQ,gBAJlB,cAEDC,EAFC,OAMJN,QAAQC,IAAIK,EAAIC,MANZ,SAOOD,EAAIC,KAPX,oF,0CCgEQC,E,YApFb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,YAAa,GACbC,SAAU,GACVC,UAAU,GAEZ,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBARE,E,iFAYjBC,KAAKC,a,gCAILD,KAAKE,UAAS,iBAAO,CACnBL,UAAU,MAGZG,KAAKC,a,iCAGK,IAAD,QDHN,WAAP,gCCIIE,GAAWC,MAAK,SAAAC,GACd,EAAKH,UAAS,iBAAO,CACnBN,SAAS,GAAD,mBAAM,EAAKF,MAAME,UAAjB,CAA2BS,IACnCV,YAAaU,EACbR,UAAU,SAGdb,QAAQC,IAAIe,KAAKN,MAAME,Y,+BAMvB,OAFqBI,KAAKN,MAAlBG,SAeJ,yBAAKS,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,gBACb,4BACEC,QAASP,KAAKF,QACdQ,UAAU,gCAFZ,iBAOF,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,gBAAf,IAAgCN,KAAKN,MAAMC,eAG/C,yBAAKW,UAAU,OACZN,KAAKN,MAAME,SACTY,MAAK,SAACzB,EAAG0B,GAAJ,OAAU1B,EAAE2B,MAAQD,EAAEC,SAC3BC,UACAC,KAAI,SAACC,EAAMH,GACV,OACE,yBAAKJ,UAAU,kCAAkCQ,IAAKJ,GACpD,kBAACK,EAAA,EAAD,CAAMT,UAAU,YACd,kBAACU,EAAA,EAAD,CAAUV,UAAU,eAAeO,UAjCjD,yBAAKP,UAAU,mBAEb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,uBAAf,8C,GA3CWW,a,aCcRC,MAXf,WACE,OACE,yBAAKZ,UAAU,mBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAIC,UAAWC,OCLzCC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.df5b2b29.chunk.js","sourcesContent":["//https://github.com/JOThurgood/modernReactBootcamp/tree/master/19-dad-jokes-app/dad-jokes/public\n\nimport axios from \"axios\";\n\nconst JokeUri = \"https://icanhazdadjoke.com/\";\n\nexport async function handleResponse(response) {\n  if (response.ok) {\n    return response.text();\n  }\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\n// function handleError(error) {\n//   console.log(\"Joke API call failed. \" + error);\n//   throw error;\n// }\n//https://kapeli.com/cheat_sheets/Axios.docset/Contents/Resources/Documents/index\n\nexport async function getJokes() {\n  console.log(\"Getting a joke ..... \");\n  let res =  await axios\n    .get(JokeUri, {\n      headers: { Accept: \"text/plain\" }\n    })\n   console.log(res.data);\n return await res.data;\n}\n    \n    // .then(function(response) {\n    //   console.log(\"Logging response  \" + response.data);\n\n    //   returnJoke = response.data;\n\n    //   console.log(\"returnJoke  \" + returnJoke);\n    //  // return returnJoke;\n    // })\n    // .catch(function(error) {\n    //   console.log(\"logging error \" + error);\n    //   return error;\n    // });\n \n","import React, { Component } from \"react\";\nimport { getJokes } from \"../jokeApi\";\nimport { Card, CardText } from \"reactstrap\";\n// import appHeader from \"./AppHeader\";\n\nclass JokePlay extends Component {\n  constructor(props) {\n    super(props);\n    //make items array to hold staff initialized as empty\n    this.state = {\n      currentJoke: \"\",\n      allJokes: [],\n      isLoaded: false\n    };\n    this.newJoke = this.newJoke.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadJoke();\n  }\n\n  newJoke() {\n    this.setState(() => ({\n      isLoaded: false\n    }));\n\n    this.loadJoke();\n  }\n\n  loadJoke() {\n    getJokes().then(j => {\n      this.setState(() => ({\n        allJokes: [...this.state.allJokes, j],\n        currentJoke: j,\n        isLoaded: true\n      }));\n    });\n    console.log(this.state.allJokes);\n  }\n\n  render() {\n    const { isLoaded } = this.state; //pass across the state\n\n    if (!isLoaded) {\n      return (\n        <div className=\"container-fluid\">\n          {/* <appHeader /> */}\n          <div className=\"row joketext\">\n            <div className=\"col-md-auto mr-auto\">\n              Just wait, we are loading a joke ...\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-auto \">\n              <button\n                onClick={this.newJoke}\n                className=\"buttonSubmit btn btn-primary\"\n              >\n                New Dad Joke\n              </button>\n            </div>\n            <div className=\"col-md-auto stopoverflow\">\n              <div className=\"row joketext\"> {this.state.currentJoke}</div>\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.state.allJokes\n              .sort((a, b) => a.index - b.index)\n              .reverse()\n              .map((item, index) => {\n                return (\n                  <div className=\"col col-md-3 col-sm-6  mx-auto \" key={index}>\n                    <Card className=\"cardBody\">\n                      <CardText className=\"conditions \">{item}</CardText>\n                    </Card>\n                  </div>\n                );\n              })}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default JokePlay;\n","import React from \"react\";\nimport jokePlay from \"./components/JokePlay\";\n//import appHeader from \"./components/AppHeader\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //from reactstrap\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <Switch>\n        <Route exact path=\"/\" component={jokePlay} />\n        {/* <Route component={appHeader} /> */}\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import AppHeader from \"./components/AppHeader\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}