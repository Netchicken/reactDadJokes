{"version":3,"sources":["components/AppHeader.js","jokeApi.js","components/Share.js","components/JokePlay.js","components/FileProcessing.js","index.js"],"names":["AppHeader","props","useState","isOpen","setIsOpen","className","Navbar","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","JokeUri","a","console","log","axios","get","headers","Accept","res","data","jokes","Share","siteURL","this","URL","FacebookShareButton","quote","Joke","url","FacebookIcon","size","round","EmailShareButton","body","subject","EmailIcon","Component","JokePlay","state","currentJoke","allJokes","jokeFile","isLoaded","isFileJokeNotAPI","newJoke","bind","loadJokeFile","loadAPIJoke","loadSingleJokeFromFile","setState","prevState","loadJokesFile","then","j","singleJoke","jokeLength","max","rnd","Math","floor","random","GenerateRND","length","getJokes","window","location","reverse","map","item","index","key","Card","CardText","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfd44c27.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from \"reactstrap\";\n//https://reactstrap.github.io/components/navbar/\nconst AppHeader = props => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n    <div className=\"container-fluid  justify-content-md-center App-header \">\n      <Navbar color=\"rgb(169, 185, 124)\" light expand=\"sm\">\n        <NavbarBrand\n          className=\"NavbarBrand\"\n          href=\"https://visioncollege.ac.nz/\"\n        >\n          Guess The Definition\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink href=\"https://visioncollege.ac.nz/study/information-technology/\">\n                Information Technology Courses\n              </NavLink>\n            </NavItem>\n            {\n              <NavItem>\n                <NavLink href=\"https://visioncollege.ac.nz/\">\n                  Vision College Home\n                </NavLink>\n              </NavItem>\n            }\n            {/* <UncontrolledDropdown nav inNavbar>\n              <DropdownToggle nav caret>\n                Options\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>Option 1</DropdownItem>\n                <DropdownItem>Option 2</DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem>Reset</DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown> */}\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default AppHeader;\n\n","//https://github.com/JOThurgood/modernReactBootcamp/tree/master/19-dad-jokes-app/dad-jokes/public\nimport jokes from \"../src/Assets/DadJokesJson.json\";\nimport axios from \"axios\";\n\nconst JokeUri = \"https://icanhazdadjoke.com/\";\n\nexport async function handleResponse(response) {\n  if (response.ok) {\n    return response.text();\n  }\n  if (response.status === 400) {\n    // So, a server-side validation error occurred.\n    // Server side validation returns a string error message, so parse as text instead of json.\n    const error = await response.text();\n    throw new Error(error);\n  }\n  throw new Error(\"Network response was not ok.\");\n}\n\n// In a real app, would likely call an error logging service.\n// function handleError(error) {\n//   console.log(\"Joke API call failed. \" + error);\n//   throw error;\n// }\n//https://kapeli.com/cheat_sheets/Axios.docset/Contents/Resources/Documents/index\n\nexport async function getJokes() {\n  console.log(\"Getting a joke ..... \");\n  let res =  await axios\n    .get(JokeUri, {\n      headers: { Accept: \"text/plain\" }\n    })\n   console.log(res.data);\n return await res.data;\n}\n    \n    // .then(function(response) {\n    //   console.log(\"Logging response  \" + response.data);\n\n    //   returnJoke = response.data;\n\n    //   console.log(\"returnJoke  \" + returnJoke);\n    //  // return returnJoke;\n    // })\n    // .catch(function(error) {\n    //   console.log(\"logging error \" + error);\n    //   return error;\n    // });\n \n// import React, { Component } from \"react\";\n\n\nexport async function loadJokesFile() {\n  return await jokes; //JSON.parse(dict);\n}","import React, { Component } from \"react\";\r\nimport {\r\n  FacebookShareButton,\r\n  EmailShareButton,\r\n  FacebookIcon,\r\n  EmailIcon\r\n} from \"react-share\";\r\n\r\n//https://www.npmjs.com/package/react-share\r\n//https://github.com/nygardk/react-share/blob/master/demo/Demo.jsx\r\nclass Share extends Component {\r\n  render() {\r\n    const siteURL = this.props.URL;\r\n    console.log(\"Share \" + siteURL);\r\n    return (\r\n      <span className=\"Demo__some-network\">\r\n        <FacebookShareButton\r\n          quote={this.props.Joke}\r\n          url={siteURL}\r\n          className=\"Demo__some-network__share-button\"\r\n        >\r\n          <FacebookIcon size={32} round />\r\n        </FacebookShareButton>\r\n\r\n        <EmailShareButton\r\n          body={\r\n            this.props.Joke +\r\n            \" \\r\\n   \\r\\n\" +\r\n            \"Another awful Dad joke from\" +\r\n            \" \\r\\n \"\r\n          }\r\n          subject={\"Another awful Dad Joke\"}\r\n          className=\"Demo__some-network__share-button\"\r\n          url={siteURL}\r\n        >\r\n          <EmailIcon size={32} round />\r\n        </EmailShareButton>\r\n      </span>\r\n    );\r\n  }\r\n}\r\nexport default Share;\r\n","import React, { Component } from \"react\";\nimport { getJokes, loadJokesFile } from \"../jokeApi\";\nimport { Card, CardText } from \"reactstrap\";\nimport { GenerateRND } from \"./FileProcessing\";\nimport Share from \"./Share\";\nclass JokePlay extends Component {\n  constructor(props) {\n    super(props);\n    //make items array to hold staff initialized as empty\n    this.state = {\n      currentJoke: \"\", //current joke shown\n      allJokes: [], //a record of all the jokes loaded to user\n      jokeFile: [], //a file of all 335 jokes\n      isLoaded: false,\n      isFileJokeNotAPI: true\n    };\n    this.newJoke = this.newJoke.bind(this);\n  }\n\n  componentDidMount() {\n    this.loadJokeFile(); //load up all jokes from file\n    this.loadAPIJoke(); //show the first joke from the api\n  }\n  //generate a new joke\n  newJoke() {\n    //select file or api\n    this.state.isFileJokeNotAPI\n      ? this.loadSingleJokeFromFile()\n      : this.loadAPIJoke();\n\n    this.setState(prevState => ({\n      isFileJokeNotAPI: !prevState.isFileJokeNotAPI\n    }));\n    console.log(\"File  \" + this.state.isFileJokeNotAPI);\n  }\n  //load up the joke file\n  loadJokeFile() {\n    loadJokesFile().then(j => {\n      this.setState(\n        () => ({\n          jokeFile: j\n        }),\n        () => {\n          //  this.WordGeneration(); //run when completed above\n        }\n      );\n    });\n  }\n\n  loadSingleJokeFromFile() {\n    const singleJoke = this.state.jokeFile[\n      GenerateRND(this.state.jokeFile.length)\n    ];\n    this.setState(() => ({\n      allJokes: [...this.state.allJokes, singleJoke], //add the joke to the history of jokes\n      currentJoke: singleJoke,\n      //  isFileJokeNotAPI: false,\n      isLoaded: true\n    }));\n  }\n  //load the API Joke\n  loadAPIJoke() {\n    //Get the API joke\n    getJokes().then(j => {\n      this.setState(() => ({\n        allJokes: [...this.state.allJokes, j], //add the joke to the history of jokes\n        currentJoke: j,\n        //  isFileJokeNotAPI: true,\n        isLoaded: true\n      }));\n    });\n    // console.log(this.state.allJokes);\n  }\n\n  render() {\n    console.log(window.location.href);\n    const { isLoaded } = this.state; //pass across the state\n    var URL = window.location.href;\n\n    if (!isLoaded) {\n      return (\n        <div className=\"container-fluid\">\n          <div className=\"row joketext\">\n            <div className=\"col-md-auto mr-auto\">\n              Just wait, we are loading a joke ...\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col-md-auto \">\n              <button\n                onClick={this.newJoke}\n                className=\"buttonSubmit btn btn-primary\"\n              >\n                New Dad Joke\n              </button>\n            </div>\n            <div className=\"col-md-auto stopoverflow\">\n              <div className=\"row joketext\"> {this.state.currentJoke}</div>\n            </div>\n          </div>\n          <div className=\"row\">\n            {this.state.allJokes.reverse().map((item, index) => {\n              return (\n                <div\n                  className=\"col  col-12   col-sm-6  col-md-3 mx-auto \"\n                  key={index}\n                >\n                  <Card className=\"cardBody\">\n                    <CardText className=\"conditions \">\n                      <Share Joke={item} URL={URL}></Share>\n                      {item}\n                    </CardText>\n                  </Card>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n\nexport default JokePlay;\n","\r\n\r\nexport function GenerateRND(jokeLength) {\r\n  const min = 0 +1; //5 is to stop out of bound errors\r\n    const max = jokeLength - 1;   //  26731 - 5; //26731\r\n  const rnd = Math.floor(Math.random() * (max - min + 1) + min);\r\n  console.log(\"rnd \" + rnd);\r\n  return rnd;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //from reactstrap\nimport AppHeader from \"./components/AppHeader\";\nimport JokePlay from \"./components/JokePlay\";\nimport \"./App.css\";\n//import App from \"./App\";\n\nReactDOM.render(\n  <Router>\n    <AppHeader />\n    <JokePlay />\n    {/* <App /> */}\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}